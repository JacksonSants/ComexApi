openapi: 3.0.3
info:
  title: Comex API
  description: O projeto é uma plataforma de e-commerce voltada para a venda de produtos de diferentes categorias. Ele permite o gerenciamento completo de produtos, clientes e categorias, oferecendo operações CRUD para cada entidade. O sistema também permite que clientes façam pedidos, visualizem produtos e gerenciem seus próprios dados.
  termsOfService: http://swagger.io/terms/
  contact:
    email: jacksondiego@gamil.com
  license:
    name: Maven Apache
    url: http://www.apache.org/licenses
  version: v1
externalDocs:
  description: Documentação para desenvolvimento front-end
  url: http://www.apache.org
servers:
  - url: https://localhost:7118

paths:

  /Categoria:
    get:
      tags:
        - Categoria
      summary: Recupera todas as categorias do banco de dados
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/ReadCategoriaDto' 
        404:
          description: Categoria não encontrados
    post:
      tags:
        - Categoria
      summary: Adiciona uma categoria no banco de dados
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/CreateCategoriaDto' 
              
      responses:
        201:
          description: "Sucesso"
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/CreateCategoriaDto'  
        400:
          description: "Falha ao criar categoria"
          
  /Categoria/{id}:
    get:
      tags:
        - Categoria
      summary: Recupera uma categoria do banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: "Id a ser recuperado"
        required: true
        schema:
          type: integer
            
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                 $ref: '#/components/schemas/ReadCategoriaDto' 
        404:
          description: "Categoria não encontrados"
          
    put:
      tags:
        - Categoria
      summary: Atualiza uma categoria do banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id atualizado
        required: true
        schema:
          type: integer
            
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/CreateCategoriaDto' 
              
      responses: 
        204: 
          description: "Sem conteudo"
        404:
          description: "Categoria não encontrada"
    
    delete:
      tags:
        - Categoria
      summary: Remove uma categoria 
      parameters:
      - name: id
        in: path
        description: Id a ser excluído
        required: true
        schema:
          type: integer
          
      responses: 
        204: 
          description: "Categoria excluído com sucesso"
        404:
          description: "Categoria não encontrada"
          
  /Endereco:
    get:
      tags:
        - Endereco
      summary: Recupera todos os enderecos do banco de dados
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ReadEnderecoDto'
    post:
        tags:
          - Endereco
        summary: Adiciona um endereco no banco de dados
        requestBody:
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/CreateEnderecoDto' 
                
        responses:
          201:
            description: "Sucesso"
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/CreateEnderecoDto'
          500: 
            description: "Erro ao cadastrar categoria"
                  
  /Endereco:{id}:
    get:
      tags:
       - Endereco
      summary: Recupera um endereco do banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id a ser buscado
        required: true
        schema:
          type: integer
              
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                 $ref: '#/components/schemas/ReadEnderecoDto'
        404:
          description: "Endereço não encontrado"
        
    put:
      tags:
        - Endereco
      summary: Atualiza um endereco do banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id a ser atualizado
        required: true
        schema:
          type: integer
            
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/CreateEnderecoDto' 
              
      responses: 
        204:
          description: "Endereco atualizado com sucesso"
        404: 
          description: "Endereç não encontrado"
        500:
          description: "Erro ao cadastar endereço"
          
    delete:
      tags:
        - Endereco
      summary: Remove um endereco
      parameters: 
      - name: id
        in: path
        description: Id a ser excluído
        required: true
        schema:
          type: integer
      
      responses: 
        204: 
          description: "Endereco excluído com sucesso"
        404:
          description: "Endereço não encontrado"
        
          
  /Cliente:
    get:
      tags:
        - Cliente
      summary: Recupera todos os clientes do banco de dados
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/ReadClienteDto'
                  
    post:
        tags:
          - Cliente
        summary: Adiciona um cliente no banco de dados
        requestBody:
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/CreateClienteDto' 
                
        responses:
          201:
            description: Sucesso
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/CreateClienteDto'
          500: 
            description: "Erro ao cadastrar cliente"
                  
  /Cliente:{id}:
    get:
      tags:
       - Cliente
      summary: Recupera um cliente do banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id a ser buscado
        required: true
        schema:
          type: integer
              
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                 $ref: '#/components/schemas/ReadClienteDto' 
        404:
          description: "Cliente não encontrados"
          
    put:
      tags:
        - Cliente
      summary: Atualiza um cliente no banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id a ser atualizado
        required: true
        schema:
          type: integer
            
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/CreateClienteDto' 
              
      responses: 
        204:
          description: "Cliente atualizado com sucesso"
        404:
          description: "Cliente não encontrado"
        500:
          description: "Erro ao cadastrar cliente"
          
    delete:
      tags:
        - Cliente
      summary: Remove um cliente
      parameters: 
      - name: id
        in: path
        description: Id a ser excluído
        required: true
        schema:
          type: integer
      
      responses: 
        204: 
          description: "Cliente excluído com sucesso"
        404:
          description: "Cliente não encontrado"
  
  /Produto:
    get:
      tags:
        - Produto
      summary: Recupera todos os produtos do banco de dados
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/ReadClienteDto'
                  
    post:
        tags:
          - Produto
        summary: Adiciona um produto no banco de dados
        requestBody:
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/CreateProdutoDto' 
                
        responses:
          201:
            description: Sucesso
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/ReadProdutoDto'
          500: 
            description: "Erro ao cadastrar produto"
  
  /Produto:{id}:
    get:
      tags:
       - Produto
      summary: Recupera um produto do banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id a ser buscado
        required: true
        schema:
          type: integer
              
      responses: 
        200: 
          description: Sucesso
          content: 
            application/json:
              schema: 
                 $ref: '#/components/schemas/ReadProdutoDto' 
        404:
          description: "Produto não encontrados"
          
    put:
      tags:
        - Produto
      summary: Atualiza um cliente no banco de dados através de um parâmetro {id}
      parameters:
      - name: id
        in: path
        description: Id a ser atualizado
        required: true
        schema:
          type: integer
            
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/CreateProdutoDto' 
              
      responses: 
        204:
          description: "Produto atualizado com sucesso"
        404:
          description: "produto não encontrado"
        500:
          description: "Erro ao cadastrar Produto"
          
    delete:
      tags:
        - Produto
      summary: Remove um produto do banco dados através de um parâmetro {id}
      parameters: 
      - name: id
        in: path
        description: Id a ser excluído
        required: true
        schema:
          type: integer
      
      responses: 
        204: 
          description: "Produto excluído com sucesso"
        404:
          description: "produto não encontrado"
  
components:
  schemas:
    ReadCategoriaDto:
      type: object
      properties:
        Id:
          type: integer
        nome:
          type: string
        Produto:
          type: array
          items:
            $ref: '#/components/schemas/CreateProdutoDto'
    
    CreateCategoriaDto:
      type: object
      properties:
        nome:
          type: string
    
    Categoria:
      type: object
      properties:
        nome:
          type: string
          
    CreateEnderecoDto:
      type: object
      properties:
        Bairro:
          type: string
        Cidade:
          type: string
        Complemento:
          type: string
        Estado:
          type: string
        Rua:
          type: string
        Numero:
          type: integer
          
    ReadEnderecoDto:
      type: object
      properties:
        Id: 
          type: string
        Bairro:
          type: string
        Cidade:
          type: string
        Complemento:
          type: string
        Estado:
          type: string
        Rua:
          type: string
        Numero:
          type: integer
        Cliente:
          type: object
          properties:
            Id:
              type: string
            Nome:
              type: string
            CPF:
              type: string
            Email:
              type: string
            Profissao:
              type: string
            Telefone:
              type: string
            EnderecoId:
              type: integer
    
    Endereco:
      type: object
      properties:
        Bairro:
          type: string
        Cidade:
          type: string
        Complemento:
          type: string
        Estado:
          type: string
        Rua:
          type: string
        Numero:
          type: integer
          
    CreateClienteDto:
      type: object
      properties:
        Nome:
          type: string
        CPF:
          type: string
        Email:
          type: string
        Profissao:
          type: string
        Telefone:
          type: string
        EnderecoId:
          type: integer
    
    ReadClienteDto:
      type: object
      properties:
        Id:
          type: integer
        Nome:
          type: string
        CPF:
          type: string
        Email:
          type: string
        Profissao:
          type: string
        Telefone:
          type: string
        EnderecoId:
          type: integer
          
    Cliente:
      type: object
      properties:
        Nome:
          type: string
        CPF:
          type: string
        Email:
          type: string
        Profissao:
          type: string
        Telefone:
          type: string
        EnderecoId:
          type: integer
    
    CreateProdutoDto:
      type: object
      properties:
        Nome:
          type: string
        Descricao:
          type: string
        Precounitario:
          type: integer
        Profissao:
          type: string
        Quantidade:
          type: integer
        cliente:
          type: integer
        
    Produto:
      type: object
      properties:
        Id:
          type: string
        Nome:
          type: string
        Descricao:
          type: string
        Precounitario:
          type: integer
        Profissao:
          type: string
        Quantidade:
          type: integer
        cliente:
          type: integer
          
    ReadProdutoDto:
      type: object
      properties:
        Id:
          type: integer
        Nome:
          type: string
        Descricao:
          type: string
        Precounitario:
          type: integer
        Profissao:
          type: string
        Quantidade:
          type: integer
        cliente:
          type: integer
          